<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
    <!-- *********************************************************** -->
    <!--                          服务核心配置                         -->
    <!-- *********************************************************** -->

    <!-- cos ranger service监听的服务地址, IP不能填写0.0.0.0, 必须写具体的地址   -->
    <!-- 因为抢到主锁的实例, 会把自己的地址写入zk中, 客户端凭借此地址进行访问 -->
    <property>
        <name>qcloud.object.storage.rpc.address</name>
        <value>10.0.1.8:9999</value>
    </property>

    <!-- 此配置设置了token中的service name, 建议写成0.0.0.0:${port}的形式, 这里的port是上述配置项中的port地址 -->
    <!-- 这个配置项的地址必须写成0.0.0.0, 因为如果发生了cos ranger service主从切换, 之前主生成的token同样可以使用 -->
    <property>
        <name>qcloud.object.storage.ranger.service.name</name>
        <value>0.0.0.0:9999</value>
    </property>

    <!-- cos ranger service的status http端口, 默认9998，服务会监听在0.0.0.0:9998地址!-->
    <!-- 客户端可以通过curl http://${ranger-server-ip}:9998/status 获取状态 -->
    <property>
        <name>qcloud.object.storage.status.port</name>
        <value>9998</value>
    </property>

    <!-- zk服务的地址, 多个地址通过逗号分割 -->
    <property>
        <name>qcloud.object.storage.zk.address</name>
        <value>1.2.3.4:2181,2.3.4.5:2181</value>
    </property>

    <!-- 获取zk锁的路径, 默认/ranger_qcloud_object_storage -->
    <property>
        <name>qcloud.object.storage.zk.latch.path</name>
        <value>/ranger_qcloud_object_storage</value>
    </property>

    <!-- 写入cos ranger service leader地址的zk路径, 默认 /ranger_qcloud_object_storage_leader_ip -->
    <property>
        <name>qcloud.object.storage.zk.leader.ip.path</name>
        <value>/ranger_qcloud_object_storage_leader_ip</value>
    </property>

    <!-- 写入cos ranger service follower地址的zk路径, 默认 /ranger_qcloud_object_storage_follower_ip -->
    <property>
        <name>qcloud.object.storage.zk.follower.ip.path</name>
        <value>/ranger_qcloud_object_storage_follower_ip</value>
    </property>

    <!-- 处理新建tcp链接的线程数量, 默认1个, 足够使用。 链接建立完毕后会放入内部队列, 供rpc.handler取出处理请求 -->
    <property>
        <name>ipc.server.read.threadpool.size</name>
        <value>1</value>
    </property>

    <!-- 处理客户的鉴权请求等的业务线程数量, 可根据机器规格与业务需要, 适当增加该线程数-->
    <property>
        <name>qcloud.object.storage.rpc.handler.count</name>
        <value>32</value>
    </property>

    <!-- 是否启用cos ranger服务, 默认false, 启用前需要在Ranger服务定义COS服务. -->
    <property>
        <name>qcloud.object.storage.enable.cos.ranger</name>
        <value>true</value>
    </property>

    <!-- 是否启用chdfs ranger服务, 默认false, 启用前需要在Ranger服务定义CHDFS服务 -->
    <property>
        <name>qcloud.object.storage.enable.chdfs.ranger</name>
        <value>true</value>
    </property>

    <!-- 用户自定义认证类Jar包路径,认证类名称 -->
    <property>
        <name>qcloud.object.user.defined.auth.jar.path</name>
        <value></value>默认为空
    </property>
    <property>
        <name>qcloud.object.user.defined.auth.class.name</name>
        <value></value>默认为空
    </property>


    <!-- *********************************************************** -->
    <!-- kerberos相关配置, 若不使用Kerberos(不进行认证), 则可以忽略         -->
    <!-- *********************************************************** -->


    <!-- 是否接入Kerberos服务, 默认false, 如果不需要认证，只需要鉴权，可以关闭 -->
    <property>
        <name>qcloud.object.storage.kerberos.enable</name>
        <value>false</value>
    </property>

    <!-- 如果开启接入Kerberos, 则使用的Kerberos的凭据(principal)是哪个 -->
    <property>
        <name>qcloud.object.storage.kerberos.principal</name>
        <value>hadoop/_HOST@EMR-DEFRHX4M</value>
    </property>

    <!-- 如果开启接入Kerberos, 包含上述凭据秘钥信息的keytab文件路径 -->
    <property>
        <name>qcloud.object.storage.kerberos.keytab</name>
        <value>/var/krb5kdc/emr.keytab</value>
    </property>

    <!-- delegation token 保存的db url, ip和端口换成自己的db地址信息 -->
    <property>
        <name>sql-dt-secret-manager.connection.url</name>
        <value>jdbc:mysql://10.0.1.1:3306/TokenStore?useUnicode=true&amp;characterEncoding=utf-8</value>
    </property>

    <!-- 用户名, 创建的用户确保对于TokenStore这个database拥有完全的权限 -->
    <property>
        <name>sql-dt-secret-manager.connection.username</name>
        <value>token_admin</value>
    </property>

    <!-- 保存数据库密码的jceks文件路径, 数据库密码可以通过hadoop credential命令创建 -->
    <!-- 参考如下范例命令, 把value设置成自己的数据库密码即可创建jceks文件, 如下命令是把jceks文件保存在hdfs的/emr/cos_ranger/db/路径下, 请确保该目录已在hdfs上创建 -->
    <!-- 如果保存在本地文件系统上, 比如保存在/tmp目录下的secrets.jceks文件, 则实例路径为 jceks://file/tmp/secrets.jceks, 如果保存在本地磁盘, 则确保每一个部署cosranger服务的节点上都有该文件 -->
    <!-- hadoop credential create sql-dt-secret-manager.connection.password -value xxxx -provider jceks://hdfs/emr/cos_ranger/db/token_db.jceks -->
    <property>
        <name>sql-dt-secret-manager.connection.password</name>
        <value>jceks://hdfs/emr/cos_ranger/db/token_db.jceks</value>
    </property>

    <!-- 数据库driver类型, 对于mysql类型的数据库, 则固定是如下配置 -->
    <property>
        <name>sql-dt-secret-manager.connection.driver</name>
        <value>com.mysql.cj.jdbc.Driver</value>
    </property>

    <!-- 数据库连接池大小 -->
    <property>
        <name>sql-dt-secret-manager.connection.maximumPoolSize</name>
        <value>128</value>
    </property>


    <!-- DelegationToken 续租间隔, 单位ms， 默认86400000(1天) -->
    <property>
        <name>qcloud.object.storage.delegation.token.renew-interval</name>
        <value>86400000</value>
    </property>

    <!-- DelegationToken 续租间隔, 单位ms， 默认604800000(7天)-->
    <property>
        <name>qcloud.object.storage.delegation.token.max-lifetime</name>
        <value>604800000</value>
    </property>


    <!-- *********************************************************** -->
    <!--                            云秘钥相关配置                      -->
    <!-- *********************************************************** -->

    <!-- 是否从emr侧获取秘钥, 默认为false. 开启这个选项，需要在腾讯云emr环境, 且预选授予了emr访问cos存储桶的权限 -->
    <!-- 开启该选项后 不用配置下面的永久秘钥相关信息, 访问COS的临时秘钥, 都由emr侧生成 -->
    <property>
        <name>qcloud.object.storage.sts.from.emr.enable</name>
        <value>false</value>
    </property>

    <property>
        <name>qcloud.object.storage.sts.from.emrv2.enable</name>
        <value>false</value>
    </property>

    <!-- 访问COS的永久秘钥的SercretId, 秘钥信息请参考 http://console.qcloud.com/capi -->
    <property>
        <name>qcloud.object.storage.cos.secret.id</name>
        <value>AKXXXXXXXXXXXXXXXXXXXXXXXX</value>
    </property>

    <!-- 访问COS的永久秘钥的SercretKey, 秘钥信息请参考 http://console.qcloud.com/capi -->
    <property>
        <name>qcloud.object.storage.cos.secret.key</name>
        <value>YYYYYYYYYYYYYYYYYYYYYYYYYYYYY</value>
    </property>

    <!-- 生成的token临时秘钥的有效期, 单位s, 默认300 -->
    <property>
        <name>qcloud.object.storage.cos.tmp.secret.duration</name>
        <value>300</value>
    </property>

    <!-- 访问生成临时秘钥的域名, 对于腾讯云CVM, 可以使用sts.internal.tencentcloudapi.com 进行内网访问-->
    <!-- 否则使用sts.tencentcloudapi.com -->
    <!-- 默认地址 sts.internal.tencentcloudapi.com -->
    <property>
        <name>qcloud.object.storage.sts.domain</name>
        <value>sts.internal.tencentcloudapi.com</value>
    </property>

</configuration>